{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/active-directory-new-domain/"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The admin password for both the Windows and Linux virtual machines."
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "The admin user name for both the Windows and Linux virtual machines."
            }
        },
        "deployDomain": {
            "type": "bool",
            "defaultValue": false
        },
        "domainName": {
            "type": "string",
            "defaultValue": "wvd.contoso.com",
            "metadata": {
                "description": "Name of the AD domain to create"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s"
        },
        "wvdNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-WindowsVirtualDesktop",
                "addressPrefix": "10.128.0.0/16",
                "directorySubnetName": "ActiveDirectorySubnet",
                "directorySubnetPrefix": "10.128.0.0/24",
                "bastionSubnetPrefix": "10.128.1.0/29",
                "gatewaySubnetPrefix": "10.128.2.0/27",
                "hostPoolSubnetName1" : "HostPool1",
                "hostPoolSubnetPrefix1" : "10.128.4.0/22",
                "hostPoolSubnetName2" : "HostPool2",
                "hostPoolSubnetPrefix2" : "10.128.8.0/22",
                "subnetNsgName": "nsg-WindowsVirtualDesktop",
                "dnsServers": [ 
                    "10.128.0.4",
                    "168.63.129.16"
                ]
            }
        }
    },
    "variables": {
        "logAnalyticsWorkspace": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]",
        "nicNameWindows": "nic-windows-",
        "vmNameWindows": "vm-windows-",
        "windowsOSVersion": "2016-Datacenter"
    },
    "resources": [
        {
            "comments": "Public IP address for Bastion",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('location'), '-bastion-pip')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Azure Bastion and diagnostic configuration",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('location'), '-bastion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('wvdNetwork').name)]",
                "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('location'), '-bastion-pip'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('wvdNetwork').name, 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('location'), '-bastion-pip'))]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/bastionHosts', concat(parameters('location'), '-bastion'))]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "BastionAuditLogs",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "DC NIC",
            "condition": "[parameters('deployDomain')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameWindows'), 'dc')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('wvdNetwork').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('wvdNetwork').name, parameters('wvdNetwork').directorySubnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Directory Services VM",
            "condition": "[parameters('deployDomain')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameWindows'), 'dc')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameWindows'), 'dc')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameWindows'), 'dc')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('vmNameWindows'), 'dc_datadisk0')]",
                            "lun": 0,
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": 8,
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameWindows'), 'dc'))]"
                        }
                    ]
                }
            },
            "resources": [
            {
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "name": "CreateADForest",
                    "condition": "[parameters('deployDomain')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat(variables('vmNameWindows'), 'dc')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('DSC/CreateADPDC.zip'))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }  
            ]
        },
        {
            "comments": "virtual network, subnet, and diagnostic configuration",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('wvdNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('wvdNetwork').subnetNsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('wvdNetwork').addressPrefix]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers" : "[parameters('wvdNetwork').dnsServers]"
                },
                "subnets": [
                    {
                        "name": "[parameters('wvdNetwork').directorySubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('wvdNetwork').directorySubnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('wvdNetwork').subnetNsgName)]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('wvdNetwork').bastionSubnetPrefix]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('wvdNetwork').gatewaySubnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('wvdNetwork').hostPoolSubnetName1]",
                        "properties": {
                            "addressPrefix": "[parameters('wvdNetwork').hostPoolSubnetPrefix1]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('wvdNetwork').subnetNsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('wvdNetwork').hostPoolSubnetName2]",
                        "properties": {
                            "addressPrefix": "[parameters('wvdNetwork').hostPoolSubnetPrefix2]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('wvdNetwork').subnetNsgName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('wvdNetwork').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('wvdNetwork').subnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [ ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('wvdNetwork').subnetNsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Log Analytics workspace",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[variables('logAnalyticsWorkspace')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        }
    ]
}